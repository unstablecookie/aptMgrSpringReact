{"ast":null,"code":"import React from\"react\";import{useState}from\"react\";import PopUpTest from'./PopUpTest';import TilesList from'./TilesList.js';import NeutralTile from'./tiles/NeutralTile.js';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const DynamicTile=props=>{const[popUpActive,setPopUpActive]=useState(false);const[CurrentTile,setDynamicTile]=useState(/*#__PURE__*/_jsx(NeutralTile,{}));const tilesChanged=props=>{changeTile(props);};const changeTile=props=>{setDynamicTile(props);setPopUpActive(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{onClick:()=>setPopUpActive(true),children:CurrentTile}),/*#__PURE__*/_jsx(PopUpTest,{active:popUpActive,setActive:setPopUpActive,children:/*#__PURE__*/_jsx(TilesList,{setTileCall:tilesChanged})})]});};export default DynamicTile;","map":{"version":3,"names":["React","useState","PopUpTest","TilesList","NeutralTile","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DynamicTile","props","popUpActive","setPopUpActive","CurrentTile","setDynamicTile","tilesChanged","changeTile","children","onClick","active","setActive","setTileCall"],"sources":["D:/dev/code/java/aptMgrSpringReact/src/main/aptmgrfront/src/components/interactive/DynamicTile.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PopUpTest from './PopUpTest';\r\nimport TilesList from './TilesList.js';\r\nimport NeutralTile from './tiles/NeutralTile.js';\r\n\r\nconst DynamicTile = (props) => {\r\n    const [popUpActive, setPopUpActive] = useState(false);\r\n\r\n    const [CurrentTile, setDynamicTile] = useState(<NeutralTile/>);\r\n\r\n    const tilesChanged = (props) => {\r\n        changeTile(props);\r\n      };\r\n\r\n    const changeTile = (props) => {\r\n        setDynamicTile(props);\r\n        setPopUpActive(false);\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div onClick={() => setPopUpActive(true)}>\r\n                {CurrentTile}\r\n            </div>\r\n            <PopUpTest active={popUpActive} setActive={setPopUpActive} >\r\n                <TilesList setTileCall={tilesChanged}/>\r\n            </PopUpTest>\r\n        </>\r\n\r\n        \r\n    );\r\n}\r\n\r\nexport default DynamicTile;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,SAAS,KAAM,gBAAgB,CACtC,MAAO,CAAAC,WAAW,KAAM,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjD,KAAM,CAAAC,WAAW,CAAIC,KAAK,EAAK,CAC3B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAErD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,cAACK,IAAA,CAACF,WAAW,GAAC,CAAC,CAAC,CAE9D,KAAM,CAAAa,YAAY,CAAIL,KAAK,EAAK,CAC5BM,UAAU,CAACN,KAAK,CAAC,CACnB,CAAC,CAEH,KAAM,CAAAM,UAAU,CAAIN,KAAK,EAAK,CAC1BI,cAAc,CAACJ,KAAK,CAAC,CACrBE,cAAc,CAAC,KAAK,CAAC,CACzB,CAAC,CAGD,mBACIJ,KAAA,CAAAF,SAAA,EAAAW,QAAA,eACIb,IAAA,QAAKc,OAAO,CAAEA,CAAA,GAAMN,cAAc,CAAC,IAAI,CAAE,CAAAK,QAAA,CACpCJ,WAAW,CACX,CAAC,cACNT,IAAA,CAACJ,SAAS,EAACmB,MAAM,CAAER,WAAY,CAACS,SAAS,CAAER,cAAe,CAAAK,QAAA,cACtDb,IAAA,CAACH,SAAS,EAACoB,WAAW,CAAEN,YAAa,CAAC,CAAC,CAChC,CAAC,EACd,CAAC,CAIX,CAAC,CAED,cAAe,CAAAN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}