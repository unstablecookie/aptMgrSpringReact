{"ast":null,"code":"'use client';\n\nimport { cssVars, getBoxShadow, toTransformOrigin } from \"./chunk-6WT2JRWX.mjs\";\n\n// src/modifiers.ts\nvar matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: _ref => {\n    let {\n      state\n    } = _ref;\n    state.styles.popper.width = `${state.rects.reference.width}px`;\n  },\n  effect: _ref2 => {\n    let {\n      state\n    } = _ref2;\n    return () => {\n      const reference = state.elements.reference;\n      state.elements.popper.style.width = `${reference.offsetWidth}px`;\n    };\n  }\n};\nvar transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: _ref3 => {\n    let {\n      state\n    } = _ref3;\n    setTransformOrigin(state);\n  },\n  effect: _ref4 => {\n    let {\n      state\n    } = _ref4;\n    return () => {\n      setTransformOrigin(state);\n    };\n  }\n};\nvar setTransformOrigin = state => {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\nvar positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: _ref5 => {\n    let {\n      state\n    } = _ref5;\n    setArrowStyles(state);\n  }\n};\nvar setArrowStyles = state => {\n  var _a;\n  if (!state.placement) return;\n  const overrides = getArrowStyle(state.placement);\n  if (((_a = state.elements) == null ? void 0 : _a.arrow) && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1\n    });\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`\n    };\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\nvar getArrowStyle = placement => {\n  if (placement.startsWith(\"top\")) {\n    return {\n      property: \"bottom\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return {\n      property: \"top\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"left\")) {\n    return {\n      property: \"right\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n  if (placement.startsWith(\"right\")) {\n    return {\n      property: \"left\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n};\nvar innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: _ref6 => {\n    let {\n      state\n    } = _ref6;\n    setInnerArrowStyles(state);\n  },\n  effect: _ref7 => {\n    let {\n      state\n    } = _ref7;\n    return () => {\n      setInnerArrowStyles(state);\n    };\n  }\n};\nvar setInnerArrowStyles = state => {\n  if (!state.elements.arrow) return;\n  const inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner) return;\n  const boxShadow = getBoxShadow(state.placement);\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow);\n  }\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`\n  });\n};\nexport { matchWidth, transformOrigin, positionArrow, innerArrow };","map":{"version":3,"names":["matchWidth","name","enabled","phase","requires","fn","_ref","state","styles","popper","width","rects","reference","effect","_ref2","elements","style","offsetWidth","transformOrigin","_ref3","setTransformOrigin","_ref4","setProperty","cssVars","var","toTransformOrigin","placement","positionArrow","_ref5","setArrowStyles","_a","overrides","getArrowStyle","arrow","Object","assign","property","value","arrowSize","varRef","height","zIndex","vars","arrowSizeHalf","arrowOffset","startsWith","innerArrow","_ref6","setInnerArrowStyles","_ref7","inner","querySelector","boxShadow","getBoxShadow","transform","background","arrowBg","top","left","position"],"sources":["D:\\dev\\code\\java\\aptMgrSpringReact\\src\\main\\aptmgrfront\\node_modules\\@chakra-ui\\popper\\src\\modifiers.ts"],"sourcesContent":["import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It is useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      const reference = state.elements.reference as HTMLElement\n      state.elements.popper.style.width = `${reference.offsetWidth}px`\n    },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setTransformOrigin(state)\n    },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf\n        .var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setInnerArrowStyles(state)\n    },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n  const boxShadow = getBoxShadow(state.placement)\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow)\n  }\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`,\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}